{"ast":null,"code":"var _jsxFileName = \"/home/sana/gestion_scolarite/client/src/Login.js\";\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport Menu from './Menu';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = async e => {\n      e.preventDefault();\n      const user = {\n        email: this.props.email,\n        password: this.props.password\n      };\n      console.log(user);\n\n      if (this.props.email === '' || this.props.password === '') {\n        return alert('you shoud fill all the fields !');\n      }\n\n      fetch('login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(user)\n      }).then(response => {\n        if (response.status == '200') {\n          response.json().then(data => {\n            console.log('token' + data.token);\n            localStorage.setItem('token', data.token);\n            this.props.history.push(`/Menu`);\n          }).catch(err => {\n            alert(\"email or password invalid!!\");\n          });\n        } else {\n          alert(\"email or password invalid!!\");\n        }\n      }).catch(() => alert(\"email or password invalid!!\"));\n    };\n\n    this.state = {\n      submitted: false,\n      // Indique si on a validé le nom \n      error: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  submitName(event) {\n    this.props.submitForm(event);\n    this.setState({\n      submitted: true\n    });\n  }\n\n  //  this.setState({ submitted : true });\n  render() {\n    return React.createElement(\"div\", {\n      id: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"App-form\",\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App-form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Connexion\"), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"E-mail\")), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Entrer e-mail\",\n      name: \"email\",\n      onChange: event => this.props.handleChange(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"password\")), React.createElement(\"input\", {\n      type: \"password\",\n      placeholder: \"Entrer le mot de passe\",\n      name: \"password\",\n      onChange: event => this.props.handleChange(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"App-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Login\")))));\n  }\n\n}\n\nexport default withRouter(Login);","map":{"version":3,"sources":["/home/sana/gestion_scolarite/client/src/Login.js"],"names":["React","Component","Link","withRouter","Menu","Login","constructor","props","onSubmit","e","preventDefault","user","email","password","console","log","alert","fetch","method","headers","body","JSON","stringify","then","response","status","json","data","token","localStorage","setItem","history","push","catch","err","state","submitted","error","onChange","bind","setState","target","name","value","submitName","event","submitForm","render","handleChange"],"mappings":"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","sourcesContent":["\nimport React, { Component } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport Menu from './Menu';\n \nclass Login extends Component {\n  \n    constructor(props) {\n        super(props);\n        this.state = {\n         submitted: false, // Indique si on a validé le nom \n         error:{}\n        };\n        this.onChange = this.onChange.bind(this)\n        this.onSubmit = this.onSubmit.bind(this)\n      }\n      onChange(e) {\n        this.setState({ [e.target.name]: e.target.value })\n      }\n          \n      submitName(event) {\n        this.props.submitForm(event)\n        this.setState({submitted: true})\n        \n      }\n\n      onSubmit = async e => {\n        e.preventDefault();\n        const user={\n          email:this.props.email,\n          password:this.props.password\n        }\n        console.log(user)\n        if ((this.props.email === '' || this.props.password === '' )) {\n          return alert('you shoud fill all the fields !') \n         }\n        fetch('login', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(user),\n        }).then(response =>{\n          if (response.status== '200'){\n            response.json()\n            .then(data=>{\n                console.log('token'+data.token)\n                localStorage.setItem('token',data.token)\n                this.props.history.push(`/Menu`)\n                  \n            }).catch((err)=>{alert(\"email or password invalid!!\")})\n\n          }else{\n            alert(\"email or password invalid!!\")\n          }\n        }).catch(()=>alert(\"email or password invalid!!\")\n        ) \n      } \n          \n         \n      //  this.setState({ submitted : true });\n    \n      \n\n      render() {\n        return (\n          <div id=\"container\">\n            <form  className=\"App-form\" onSubmit={this.onSubmit}>\n                <div className=\"App-form-group\">   \n                     <h1>Connexion</h1>\n                     <label><b>E-mail</b></label>\n                     <input \n                      type=\"text\" \n                      placeholder=\"Entrer e-mail\" \n                      name=\"email\"\n                      onChange={(event) => this.props.handleChange(event)}\n                     ></input>\n                     <label><b>password</b></label>\n                     <input \n                     type=\"password\" \n                     placeholder=\"Entrer le mot de passe\" \n                     name=\"password\" \n                     onChange={(event) => this.props.handleChange(event)}\n                     ></input>\n                    <button type=\"submit\" className=\"App-btn\"  ><b>Login</b></button>\n                 </div>   \n           </form>\n    \n          </div>\n        );\n      }\n\n}\n\nexport default withRouter(Login);"]},"metadata":{},"sourceType":"module"}